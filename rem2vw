#!/bin/bash

# Check if the conversion factor is passed as an argument
if [ $# -eq 0 ]
then
    echo "Please enter the rem to vw conversion factor:"
    read conversion_factor
else
    conversion_factor=$1
fi

# Confirm the conversion factor
echo "Using conversion factor: $conversion_factor"

# Function to convert rem to vw
convert_rem_to_vw() {
    awk -v factor="$conversion_factor" '{
        # Look for fontSize or lineHeight followed by a numeric rem value enclosed in quotes
        while (match($0, /(fontSize|lineHeight):[[:space:]]*"([0-9]+(\.[0-9]+)?)rem"/, arr)) {
            # Extract the numeric value and calculate the new vw value
            new_value = arr[2] * factor;
            new_vw = sprintf("\"%s" "vw\"", new_value);
            # Replace the rem value with vw in the line
            $0 = substr($0, 1, RSTART-1) arr[1] ": " new_vw substr($0, RSTART+RLENGTH);
        }
    } { print }'
}

# Find TypeScript (.ts and .tsx) files and apply conversion using the function
export -f convert_rem_to_vw
export conversion_factor
find . -type f \( -iname '*.ts' -o -iname '*.tsx' \) -exec bash -c 'convert_rem_to_vw < "$1" > "$1.tmp" && mv "$1.tmp" "$1"' _ {} \;

echo "Conversion completed."
